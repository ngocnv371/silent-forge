steps:
  - task: NodeTool@0
    displayName: Set node version
    inputs:
      versionSpec: 14.x

  - task: Cache@2
    displayName: "Cache npm"
    inputs:
      key: '"$(npmCacheKeyPrefix)" | "$(Agent.OS)" | $(Build.SourcesDirectory)/$(projectName)/package.json'
      path: $(npm_config_cache)
      cacheHitVar: NPM_CACHE_RESTORED

  - script: yarn --cwd ./App install --frozen-lockfile
    condition: ne(variables.NPM_CACHE_RESTORED, 'true')
    displayName: Install packages

  - script: npm i -g @ionic/cli
    displayName: 'Install Ionic CLI'

  - powershell: |
      $env:APP_ENV='$(environment)'
      echo "Initiate android build on $env:APP_ENV environment"
      Invoke-Expression "ren .env.$env:APP_ENV .env.production"
      ionic cap build android --no-open --prod
      npx cap sync
      cd android
      $env:JAVA_HOME=$env:JAVA_HOME_11_X64
      ./gradlew assemble$(buildConfiguration)
    workingDirectory: $(Build.SourcesDirectory)/$(projectName)
    displayName: 'Build Android Project'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/$(projectName)/android/app/build/outputs/apk/$(buildConfiguration)'
      contents: "**/app-$(buildConfiguration).apk"
      targetFolder: "$(Build.ArtifactStagingDirectory)/$(projectName)"
    displayName: "Copy unsigned APK to staging directory"

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/$(projectName)"
      ArtifactName: "$(projectName)"
      publishLocation: "Container"
    displayName: "Publish artifacts"